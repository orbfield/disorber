{"version":3,"file":"static/js/904.da7f9576.chunk.js","mappings":"8JAEA,MA+DA,EA/DoBA,KAClB,MAAOC,EAAQC,IAAaC,EAAAA,EAAAA,UAAS,eAC9BC,EAASC,IAAcF,EAAAA,EAAAA,UAAS,MAqDvC,OAnDAG,EAAAA,EAAAA,YAAU,KAER,MAAMC,EAASC,SAASC,cAAc,UA4CtC,OA3CAF,EAAOG,IAAM,2DACbH,EAAOI,OAAQ,EACfJ,EAAOK,OAGPD,iBACE,IACE,MAAMP,QAAgBS,OAAOC,YAAY,CACvCC,SAAU,iDACVC,OAASC,GAASC,QAAQC,IAAIF,GAC9BG,OAASH,GAASC,QAAQG,MAAMJ,KAGlCZ,EAAWD,GACXc,QAAQC,IAAI,qCAENf,EAAQkB,YAAY,CAAC,aAC3BJ,QAAQC,IAAI,mBAEZ,MAAMI,EAAWnB,EAAQoB,SAAS,YAElCN,QAAQC,IAAI,6BAENI,EAASE,QAAQ,CACrB,iFAGFP,QAAQC,IAAI,yBAEZ,MAAMO,QAAetB,EAAQuB,eAAe,oHAM5CzB,EAAUwB,EACZ,CAAE,MAAOL,GACPH,QAAQG,MAAM,kBAAmBA,GACjCnB,EAAU,UAAUmB,EAAMO,UAC5B,CACF,EArCApB,SAASqB,KAAKC,YAAYvB,GAwCnB,KACLC,SAASqB,KAAKE,YAAYxB,EAAO,CAClC,GACA,KAGDyB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBC,SAAA,EACjCC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,yBAAwBC,SAAC,0BACvCC,EAAAA,EAAAA,KAAA,OAAAD,SAAMjC,MACF,C","sources":["components/PyodideTest.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst PyodideTest = () => {\r\n  const [output, setOutput] = useState('Loading...');\r\n  const [pyodide, setPyodide] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Add Pyodide script to document head\r\n    const script = document.createElement('script');\r\n    script.src = \"https://cdn.jsdelivr.net/pyodide/v0.27.2/full/pyodide.js\";\r\n    script.async = true;\r\n    script.onload = initPyodide;\r\n    document.head.appendChild(script);\r\n\r\n    async function initPyodide() {\r\n      try {\r\n        const pyodide = await window.loadPyodide({\r\n          indexURL: \"https://cdn.jsdelivr.net/pyodide/v0.27.2/full/\",\r\n          stdout: (text) => console.log(text),\r\n          stderr: (text) => console.error(text)\r\n        });\r\n        \r\n        setPyodide(pyodide);\r\n        console.log(\"Pyodide loaded successfully\");\r\n        \r\n        await pyodide.loadPackage(['micropip']);\r\n        console.log(\"Micropip loaded\");\r\n        \r\n        const micropip = pyodide.pyimport('micropip');\r\n        \r\n        console.log(\"Installing Panel...\");\r\n        // Install Panel\r\n        await micropip.install([\r\n          'https://cdn.holoviz.org/panel/1.6.0/dist/wheels/panel-1.6.0-py3-none-any.whl'\r\n        ]);\r\n        \r\n        console.log(\"Running Panel test...\");\r\n        // Run a simple Panel command\r\n        const result = await pyodide.runPythonAsync(`\r\n          import panel as pn\r\n          pn.extension()\r\n          \"Panel version: \" + pn.__version__\r\n        `);\r\n        \r\n        setOutput(result);\r\n      } catch (error) {\r\n        console.error(\"Detailed error:\", error);\r\n        setOutput(`Error: ${error.message}`);\r\n      }\r\n    }\r\n\r\n    // Cleanup\r\n    return () => {\r\n      document.head.removeChild(script);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"p-4 border rounded\">\r\n      <h2 className=\"text-lg font-bold mb-2\">Pyodide + Panel Test</h2>\r\n      <pre>{output}</pre>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PyodideTest;"],"names":["PyodideTest","output","setOutput","useState","pyodide","setPyodide","useEffect","script","document","createElement","src","async","onload","window","loadPyodide","indexURL","stdout","text","console","log","stderr","error","loadPackage","micropip","pyimport","install","result","runPythonAsync","message","head","appendChild","removeChild","_jsxs","className","children","_jsx"],"sourceRoot":""}